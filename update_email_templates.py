#!/usr/bin/env python3
"""
Update email templates for activity #4 to avoid Gmail Promotions folder
"""
import sqlite3
import json
import os

db_path = os.path.join(os.path.dirname(__file__), 'instance', 'minipass.db')

# New email templates with:
# - No emojis in subjects
# - Simplified transactional titles
# - Enhanced conclusion text
new_templates = {
    "newPass": {
        "subject": "Votre passeport num√©rique",
        "title": "Votre passeport num√©rique est disponible",
        "intro_text": "<p>Bonjour <strong>{{ pass_data.user.name }}</strong>,</p>\n<p>Votre passeport num√©rique vient d'√™tre cr√©√©.</p>\n<p>Il vous donne acc√®s √† <strong>{{ pass_data.uses_remaining }}</strong> participations pour <strong>{{ pass_data.activity.name }}</strong>.</p>\n{% if pass_data.activity.location_address_formatted %}\n<p>üìç <strong>Lieu :</strong> {{ pass_data.activity.location_address_formatted }}</p>\n{% endif %}\n<p>Pr√©sentez simplement le code QR ci-dessous lors de chaque participation.</p>",
        "conclusion_text": "{% if not pass_data.paid %}<p><strong>‚ö†Ô∏è Rappel important :</strong></p>\n<p>Votre passeport n'est pas encore pay√©. Merci de compl√©ter le paiement de <strong>{{ \"%.2f\"|format(pass_data.sold_amt) }}$</strong> pour activer votre acc√®s.</p>{% endif %}\n<p>&nbsp;</p>\n<p>Merci de faire partie de cette aventure. Si vous avez des questions ou besoin d'assistance, n'h√©sitez pas √† nous contacter directement.</p>\n<p>√Ä tr√®s bient√¥t,<br>\n<em><strong>L'√©quipe</strong></em></p>",
        "custom_message": "",
        "cta_text": "Voir mon passeport",
        "cta_url": "https://minipass.me/my-passes"
    },
    "paymentReceived": {
        "subject": "Confirmation de paiement",
        "title": "Paiement confirm√©",
        "intro_text": "<p>Bonjour <strong>{{ pass_data.user.name }}</strong>,</p>\n<p>Nous avons bien re√ßu votre paiement de <strong>{{ \"%.2f\"|format(pass_data.sold_amt) }}$</strong>.</p>\n<p>Votre passeport num√©rique pour <strong>{{ pass_data.activity.name }}</strong> est maintenant actif et pr√™t √† √™tre utilis√©.</p>\n{% if pass_data.activity.location_address_formatted %}\n<p>üìç <strong>Lieu :</strong> {{ pass_data.activity.location_address_formatted }}</p>\n{% endif %}\n<p>Il vous reste <strong>{{ pass_data.uses_remaining }}</strong> participations.</p>",
        "conclusion_text": "<p>Merci de votre confiance. Votre passeport est maintenant actif et vous pouvez commencer √† l'utiliser d√®s aujourd'hui.</p>\n<p>Si vous avez des questions ou besoin d'assistance, n'h√©sitez pas √† nous contacter directement. Nous sommes l√† pour vous aider.</p>\n<p>√Ä tr√®s bient√¥t,<br>\n<em><strong>L'√©quipe</strong></em></p>",
        "custom_message": "",
        "cta_text": "Voir mon passeport",
        "cta_url": "https://minipass.me/my-passes"
    },
    "latePayment": {
        "subject": "Rappel de paiement en attente",
        "title": "Petit rappel amical",
        "intro_text": "<p>Bonjour <strong>{{ pass_data.user.name }}</strong>,</p>\n<p>Votre passeport num√©rique pour <strong>{{ pass_data.activity.name }}</strong> est en attente de paiement.</p>\n<p>Pour activer votre acc√®s, merci de compl√©ter le paiement de <strong>{{ \"%.2f\"|format(pass_data.sold_amt) }}$</strong>.</p>\n{% if pass_data.activity.location_address_formatted %}\n<p>üìç <strong>Lieu :</strong> {{ pass_data.activity.location_address_formatted }}</p>\n{% endif %}",
        "conclusion_text": "<p>Si vous avez des questions ou rencontrez un probl√®me concernant le paiement, n'h√©sitez pas √† nous contacter. Nous sommes disponibles pour vous aider.</p>\n<p>Merci de votre compr√©hension,<br>\n<em><strong>L'√©quipe</strong></em></p>",
        "custom_message": "",
        "cta_text": "Effectuer le paiement",
        "cta_url": "https://minipass.me/payment"
    },
    "signup": {
        "subject": "Confirmation d'inscription",
        "title": "Inscription confirm√©e",
        "intro_text": "<p>Bonjour <strong>{{ user_name }}</strong>,</p>\n<p>Votre inscription √† <strong>{{ activity_name }}</strong> est confirm√©e.</p>\n{% if activity.location_address_formatted %}\n<p>üìç <strong>Lieu :</strong> {{ activity.location_address_formatted }}</p>\n{% endif %}\n<p>D√®s r√©ception de votre paiement, votre passeport num√©rique vous sera envoy√© automatiquement.</p>",
        "conclusion_text": "<p>Merci de faire partie de cette aventure. Nous sommes impatients de vous accueillir.</p>\n<p>Si vous avez des questions concernant votre inscription ou le processus de paiement, n'h√©sitez pas √† nous contacter.</p>\n<p>√Ä tr√®s bient√¥t,<br>\n<em><strong>L'√©quipe</strong></em></p>",
        "custom_message": "",
        "cta_text": "Voir les d√©tails",
        "cta_url": "https://minipass.me/my-signups"
    },
    "redeemPass": {
        "subject": "Confirmation de participation",
        "title": "Participation enregistr√©e",
        "intro_text": "<p>Bonjour <strong>{{ pass_data.user.name }}</strong>,</p>\n<p>Une participation vient d'√™tre utilis√©e sur votre passeport num√©rique pour <strong>{{ pass_data.activity.name }}</strong>.</p>\n{% if pass_data.activity.location_address_formatted %}\n<p>üìç <strong>Lieu :</strong> {{ pass_data.activity.location_address_formatted }}</p>\n{% endif %}\n<p><strong>Participations restantes :</strong> {{ pass_data.uses_remaining }}</p>",
        "conclusion_text": "{% if not pass_data.paid %}<p><strong>‚ö†Ô∏è Rappel important :</strong></p>\n<p>Votre passeport n'est pas encore pay√©. Merci de compl√©ter le paiement de <strong>{{ \"%.2f\"|format(pass_data.sold_amt) }}$</strong> pour continuer √† profiter de vos participations.</p>{% endif %}\n<p>&nbsp;</p>\n<p>Merci de faire partie de cette aventure. Nous esp√©rons que vous appr√©ciez votre exp√©rience.</p>\n<p>N'h√©sitez pas √† nous contacter si vous avez des questions concernant vos participations restantes ou tout autre sujet.</p>\n<p>√Ä tr√®s bient√¥t,<br>\n<em><strong>L'√©quipe</strong></em></p>",
        "custom_message": "",
        "cta_text": "Voir mon passeport",
        "cta_url": "https://minipass.me/my-passes"
    },
    "survey_invitation": {
        "subject": "Votre avis nous int√©resse",
        "title": "Nous aimerions conna√Ætre votre avis",
        "intro_text": "<p>Bonjour,</p>\n<p>Vous avez r√©cemment particip√© √† <strong>{{ activity_name }}</strong> et nous aimerions conna√Ætre votre avis.</p>\n<p>Quelques minutes suffisent pour r√©pondre √† notre sondage. Vos commentaires nous aident √† am√©liorer nos services.</p>\n{% if activity.location_address_formatted %}\n<p>üìç <strong>Lieu :</strong> {{ activity.location_address_formatted }}</p>\n{% endif %}",
        "conclusion_text": "<p>Merci d'avance pour votre temps et vos pr√©cieux commentaires. Votre opinion compte beaucoup pour nous.</p>\n<p>Si vous avez des questions ou souhaitez nous contacter directement, n'h√©sitez pas √† nous √©crire.</p>\n<p>Cordialement,<br>\n<em><strong>L'√©quipe</strong></em></p>",
        "custom_message": "",
        "cta_text": "R√©pondre au sondage",
        "cta_url": "{survey_url}"
    }
}

print("üîß Updating email templates for activity #4...")
print(f"üìÅ Database: {db_path}")

conn = sqlite3.connect(db_path)
cursor = conn.cursor()

try:
    # Get current templates
    cursor.execute("SELECT email_templates FROM activity WHERE id = 4")
    result = cursor.fetchone()

    if not result or not result[0]:
        print("‚ùå No existing templates found for activity #4")
        exit(1)

    print("‚úÖ Found existing templates")

    # Update with new templates
    cursor.execute(
        "UPDATE activity SET email_templates = ? WHERE id = 4",
        (json.dumps(new_templates, ensure_ascii=False),)
    )

    conn.commit()
    print("‚úÖ Successfully updated email templates!")
    print("\nüìã Changes made:")
    print("  ‚Ä¢ Removed ALL emojis from subject lines")
    print("  ‚Ä¢ Simplified titles to be transactional")
    print("  ‚Ä¢ Enhanced conclusion text (2-3 more sentences)")
    print("  ‚Ä¢ Kept functional emoji üìç for location")
    print("\nüéØ Ready to test!")

except Exception as e:
    print(f"‚ùå Error: {e}")
    conn.rollback()
    raise
finally:
    conn.close()
